Vessel vessel1 = problemData.getVesselByNumber(1);
		Vessel vessel2 = problemData.getVesselByNumber(2);
		Vessel vessel3 = problemData.getVesselByNumber(3);
		Vessel vessel4 = problemData.getVesselByNumber(4);
		
		Set<Integer> vesselDepartures1 = new HashSet<Integer>();
		vesselDepartures1.add(0);
		vesselDepartures1.add(3);
		Set<Integer> vesselDepartures2 = new HashSet<Integer>();
		vesselDepartures2.add(1);
		vesselDepartures2.add(4);
		Set<Integer> vesselDepartures3 = new HashSet<Integer>();
		vesselDepartures3.add(2);
		vesselDepartures3.add(5);
		Set<Integer> vesselDepartures4 = new HashSet<Integer>();
		vesselDepartures4.add(0);
		
		ArrayList<Integer> installations1 = new ArrayList<Integer>();
		installations1.add(6);
		installations1.add(1);
		installations1.add(3);
		installations1.add(7);
		installations1.add(8);
		installations1.add(10);
		Voyage voyage1 = new Voyage(installations1, vessel1, vesselDepartures1, 0, problemData);
		
		ArrayList<Integer> installations2 = new ArrayList<Integer>();
		installations2.add(4);
		installations2.add(5);
		installations2.add(12);
		installations2.add(9);
		installations2.add(2);
		installations2.add(11);
		Voyage voyage2 = new Voyage(installations2, vessel4, vesselDepartures4, 0, problemData);
		
		ArrayList<Integer> installations3 = new ArrayList<Integer>();
		installations3.add(2);
		installations3.add(3);
		installations3.add(4);
		installations3.add(1);
		installations3.add(9);
		installations3.add(7);
		installations3.add(8);
		installations3.add(11);
		Voyage voyage3 = new Voyage(installations3, vessel2, vesselDepartures2, 1, problemData);
		
		ArrayList<Integer> installations4 = new ArrayList<Integer>();
		installations4.add(2);
		installations4.add(8);
		installations4.add(7);
		installations4.add(3);
		installations4.add(4);
		installations4.add(12);
		installations4.add(1);
		installations4.add(9);
		Voyage voyage4 = new Voyage(installations4, vessel3, vesselDepartures3, 2, problemData);
		
		ArrayList<Integer> installations5 = new ArrayList<Integer>();
		installations5.add(4);
		installations5.add(5);
		installations5.add(12);
		installations5.add(1);
		installations5.add(9);
		installations5.add(7);
		installations5.add(8);
		installations5.add(11);
		Voyage voyage5 = new Voyage(installations5, vessel1, vesselDepartures1, 3, problemData);
		
		ArrayList<Integer> installations6 = new ArrayList<Integer>();
		installations6.add(6);
		installations6.add(1);
		installations6.add(9);
		installations6.add(3);
		installations6.add(2);
		installations6.add(8);
		installations6.add(11);
		Voyage voyage6 = new Voyage(installations6, vessel2, vesselDepartures2, 4, problemData);
		
		ArrayList<Integer> installations7 = new ArrayList<Integer>(installations4);
		Voyage voyage7 = new Voyage(installations7, vessel3, vesselDepartures3, 5, problemData);
		
		HashMap<Integer, HashMap<Integer, ArrayList<Integer>>> giantTourChromosome =  new HashMap<Integer, HashMap<Integer,ArrayList<Integer>>>();
		
		for (int i = 0; i < 7; i++) {//days
			HashMap<Integer, ArrayList<Integer>> day = new HashMap<Integer, ArrayList<Integer>>();
			for (int j = 1; j < 5; j++) {//vessels
				day.put(j, new ArrayList<Integer>());
			}
			giantTourChromosome.put(i, day);
		}
		
		HashMap<Integer, ArrayList<Integer>> day0 = giantTourChromosome.get(0);
		day0.put(1, installations1);
		day0.put(4, installations2);
		
		HashMap<Integer, ArrayList<Integer>> day1 = giantTourChromosome.get(1);
		day1.put(2, installations3);
		
		HashMap<Integer, ArrayList<Integer>> day2 = giantTourChromosome.get(2);
		day2.put(3, installations4);
		
		HashMap<Integer, ArrayList<Integer>> day3 = giantTourChromosome.get(3);
		day3.put(1, installations5);
		
		HashMap<Integer, ArrayList<Integer>> day4 = giantTourChromosome.get(4);
		day4.put(2, installations6);
		
		HashMap<Integer, ArrayList<Integer>> day5 = giantTourChromosome.get(5);
		day5.put(3, installations7);